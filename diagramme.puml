@startuml dd

class BestioleFactory {
  + liste_taux : map<string : double>

  + CreerBestiole(type:String):Bestiole
}

class Bestiole {
    + id : int
    + vitesse : double
    + position_x : double
    + position_y : double
    + orientation : double
    + taille : double
    + age : int
    + age_limite : int
    + Naissance()
    + mort()
    + clonage()
    + contextComportement : IComportement
}

class Aquarium {
 + longueur : int
 + largeur : int
 + listBestiole : vector<Bestiole>

 +AjouterBestiole()
 +eliminerBestiole(Bestiole)
 +Maj()
}

class BestioleOreille {
    - deltamin : float
    - deltamax : float
    - cap_detection_o_max : float
    - cap_detection_o_min : float
    + Entendre()
}

class BestioleNageoire {  
    - boost_max : float
    + Accelerer(vitesse v,boost_max) : void
}

class BestioleCamouflage {
  - Invisibilité : Float
  + Camoufler()
}

class BestioleCarapace {
  - Resistance : Float
  + Encaisser()
}

class BestioleYeux {
  - alphamin : Float
  - alphamax : Float
  - dmin : Float
  - dmax : float
  - cap_detection_y_max : Float
  - cap_detection_y_min : Float
  + Voir()
}

class IComportement {
  + Deplacer(Bestiole)
}

class Grégaire {
    -Deplacer(Bestiole) : void #ajustDirection

}

class Peureuse{
    -Deplacer(Bestiole) : void #def seuil+fuir

}

class Kamikaze{
    -Deplacer(Bestiole) : void #percuterKamikaze
}

class Prévoyant{
    -Deplacer(Bestiole) : void #ajuster trajectoire

}

Interface IBestiole{
  +Deplacer()
  +Percussion()
}

class DécorateurBestiole{
  - Bestiole : IBestiole 
}

class Multi{
    -adoptComportement(Bestiole) : void ?
}

BestioleFactory --> Bestiole : créer
DécorateurBestiole ..> BestioleOreille
DécorateurBestiole ..> BestioleNageoire
DécorateurBestiole ..> BestioleCamouflage
DécorateurBestiole ..> BestioleCarapace
DécorateurBestiole ..> BestioleYeux
Bestiole ..> IComportement

IComportement --> Grégaire: implemente
IComportement --> Peureuse: implemente
IComportement --> Kamikaze: implemente
IComportement --> Prévoyant: implemente
IComportement --> Multi: implemente
Bestiole --> IBestiole

Aquarium --* "many" Bestiole : contient
DécorateurBestiole --o "many" IBestiole : contient

@enduml